[{"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\index.js":"1","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\App.js":"2","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\reportWebVitals.js":"3","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\index.js":"4","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Home\\Home.js":"5","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Index\\Index.js":"6","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Profile\\Profile.js":"7","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Register\\Register.js":"8","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Friends\\Friends.js":"9","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\ProtectedRoute\\ProtectedRoute.js":"10","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\PostPage\\PostPage.js":"11","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\ProfileFriends\\ProfileFriends.js":"12","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\FacebookLogin\\FacebookLogin.js":"13","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Photos\\Photos.js":"14","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Photos\\Photos.components.js":"15","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Register\\Register.components.js":"16","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Profile\\Profile.components.js":"17","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\index.js":"18","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Index\\Index.components.js":"19","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Home\\Home.components.js":"20","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\PostForm\\PostForm.js":"21","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Post\\Post.js":"22","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Navbar\\Navbar.js":"23","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LoadingOverlay\\LoadingOverlay.js":"24","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Comment\\Comment.js":"25","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ImageForm\\ImageForm.js":"26","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\CommentForm\\CommentForm.js":"27","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ReplyForm\\ReplyForm.js":"28","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Notification\\Notification.js":"29","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendRequest\\FriendRequest.js":"30","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendsProfile\\FriendsProfile.js":"31","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Photo\\Photo.js":"32","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LikesModal\\LikesModal.js":"33","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendSuggestion\\FriendSuggestion.js":"34","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Reply\\Reply.js":"35","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\UserList\\UserList.js":"36","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Comment\\Comment.components.js":"37","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Post\\Post.components.js":"38","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Navbar\\Navbar.components.js":"39","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\PostForm\\PostForm.components.js":"40","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ImageForm\\ImageForm.components.js":"41","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LoadingOverlay\\LoadingOverlay.components.js":"42","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendRequest\\FriendRequest.components.js":"43","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ReplyForm\\ReplyForm.components.js":"44","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Notification\\Notification.components.js":"45","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\CommentForm\\CommentForm.components.js":"46","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendsProfile\\FriendsProfile.components.js":"47","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Photo\\Photo.components.js":"48","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LikesModal\\LikesModal.components.js":"49","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendSuggestion\\FriendSuggestion.components.js":"50","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Reply\\Reply.components.js":"51"},{"size":839,"mtime":1695493275157,"results":"52","hashOfConfig":"53"},{"size":2751,"mtime":1695493275132,"results":"54","hashOfConfig":"53"},{"size":377,"mtime":1695478836438,"results":"55","hashOfConfig":"53"},{"size":615,"mtime":1695493275156,"results":"56","hashOfConfig":"53"},{"size":3346,"mtime":1695493275150,"results":"57","hashOfConfig":"53"},{"size":3793,"mtime":1695493275151,"results":"58","hashOfConfig":"53"},{"size":11786,"mtime":1695493275154,"results":"59","hashOfConfig":"53"},{"size":3586,"mtime":1695493275156,"results":"60","hashOfConfig":"53"},{"size":4865,"mtime":1695493275150,"results":"61","hashOfConfig":"53"},{"size":582,"mtime":1695493275155,"results":"62","hashOfConfig":"53"},{"size":1268,"mtime":1695493275153,"results":"63","hashOfConfig":"53"},{"size":105,"mtime":1695493275155,"results":"64","hashOfConfig":"53"},{"size":182,"mtime":1695478836426,"results":"65","hashOfConfig":"53"},{"size":382,"mtime":1695493275152,"results":"66","hashOfConfig":"53"},{"size":297,"mtime":1695493275152,"results":"67","hashOfConfig":"53"},{"size":244,"mtime":1695493275156,"results":"68","hashOfConfig":"53"},{"size":5045,"mtime":1695493275154,"results":"69","hashOfConfig":"53"},{"size":1026,"mtime":1695493275149,"results":"70","hashOfConfig":"53"},{"size":266,"mtime":1695493275151,"results":"71","hashOfConfig":"53"},{"size":1095,"mtime":1695493275150,"results":"72","hashOfConfig":"53"},{"size":4621,"mtime":1695493275146,"results":"73","hashOfConfig":"53"},{"size":9818,"mtime":1695493275145,"results":"74","hashOfConfig":"53"},{"size":12726,"mtime":1695493275142,"results":"75","hashOfConfig":"53"},{"size":400,"mtime":1695493275141,"results":"76","hashOfConfig":"53"},{"size":8599,"mtime":1695493275134,"results":"77","hashOfConfig":"53"},{"size":2132,"mtime":1695493275139,"results":"78","hashOfConfig":"53"},{"size":3001,"mtime":1695493275135,"results":"79","hashOfConfig":"53"},{"size":3219,"mtime":1695493275148,"results":"80","hashOfConfig":"53"},{"size":1528,"mtime":1695493275143,"results":"81","hashOfConfig":"53"},{"size":1007,"mtime":1695493275135,"results":"82","hashOfConfig":"53"},{"size":1108,"mtime":1695493275137,"results":"83","hashOfConfig":"53"},{"size":255,"mtime":1695493275144,"results":"84","hashOfConfig":"53"},{"size":794,"mtime":1695493275140,"results":"85","hashOfConfig":"53"},{"size":807,"mtime":1695493275137,"results":"86","hashOfConfig":"53"},{"size":5492,"mtime":1695493275147,"results":"87","hashOfConfig":"53"},{"size":315,"mtime":1695493275148,"results":"88","hashOfConfig":"53"},{"size":1211,"mtime":1695493275133,"results":"89","hashOfConfig":"53"},{"size":2685,"mtime":1695493275144,"results":"90","hashOfConfig":"53"},{"size":4242,"mtime":1695493275141,"results":"91","hashOfConfig":"53"},{"size":1811,"mtime":1695493275145,"results":"92","hashOfConfig":"53"},{"size":223,"mtime":1695493275138,"results":"93","hashOfConfig":"53"},{"size":261,"mtime":1695493275140,"results":"94","hashOfConfig":"53"},{"size":405,"mtime":1695493275135,"results":"95","hashOfConfig":"53"},{"size":429,"mtime":1695493275148,"results":"96","hashOfConfig":"53"},{"size":996,"mtime":1695493275142,"results":"97","hashOfConfig":"53"},{"size":548,"mtime":1695493275134,"results":"98","hashOfConfig":"53"},{"size":551,"mtime":1695493275137,"results":"99","hashOfConfig":"53"},{"size":202,"mtime":1695493275143,"results":"100","hashOfConfig":"53"},{"size":1163,"mtime":1695493275139,"results":"101","hashOfConfig":"53"},{"size":405,"mtime":1695493275136,"results":"102","hashOfConfig":"53"},{"size":1203,"mtime":1695493275146,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"v0rc03",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\index.js",[],["221","222"],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\App.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\reportWebVitals.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\index.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Home\\Home.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Index\\Index.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Profile\\Profile.js",["223","224","225"],"import { Container, Col, Button } from \"reactstrap\";\r\nimport { Navbar } from \"../../Components\";\r\nimport {\r\n  CoverPhoto,\r\n  ProfilePhoto,\r\n  ProfilePhotoWrapper,\r\n  ProfileSection,\r\n  ProfileHeader,\r\n  ProfileNav,\r\n  NavItem,\r\n  Main,\r\n  DefaultCoverPhoto,\r\n  ChangeProfilePhoto,\r\n  GrayHoverDiv,\r\n  FlexDivGray,\r\n  Option,\r\n  CollapseDiv,\r\n  WhiteContainer,\r\n  Description,\r\n} from \"./Profile.components\";\r\nimport {\r\n  Post,\r\n  PostForm,\r\n  ImageForm,\r\n  FriendsProfile,\r\n  LoadingOverlay,\r\n} from \"../../Components\";\r\nimport { Photos } from \"../../Pages\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { AiFillCamera } from \"react-icons/ai\";\r\nimport Axios from \"axios\";\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport async from \"async\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Profile = ({\r\n  profileUser = undefined,\r\n  showNav = true,\r\n  user,\r\n  reloadUser,\r\n  users,\r\n  setUser,\r\n}) => {\r\n  const { user_id } = useParams();\r\n\r\n  const [subPage, setSubPage] = useState(\"main\");\r\n  const [currentUser, setCurrentUser] = useState(profileUser || user);\r\n  const [requests, setRequests] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [coverPhotoForm, setCoverPhotoForm] = useState(false);\r\n  const [profilePhotoForm, setProfilePhotoForm] = useState(false);\r\n  const [collapse, setCollapse] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [photos, setPhotos] = useState([]);\r\n\r\n  // Friendship status state\r\n  const [sameUser, setSameUser] = useState(false);\r\n  const [isFriends, setIsFriends] = useState(false);\r\n  const [sentRequest, setSentRequest] = useState(undefined);\r\n  const [receivedRequest, setReceivedRequest] = useState(undefined);\r\n\r\n  const config = localStorage.getItem(\"token\") && {\r\n    headers: {\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  /* Friend request logic functions */\r\n  const sendRequest = (to) => {\r\n    //const to = e.target.getAttribute('data-id');\r\n    Axios.post(`/friend_requests/${to}/send`, {}, config).then((res) => {\r\n      setRequests([...requests, res.data]);\r\n      setSentRequest(res.data._id);\r\n    });\r\n  };\r\n\r\n  const checkIsFriend = () => {\r\n    const userFriendsIDs = user.friends.map((friend) => friend._id);\r\n    return userFriendsIDs.includes(currentUser._id);\r\n  };\r\n\r\n  const confirmFriend = (_id) => {\r\n    //const _id = e.target.getAttribute('data-id');\r\n    Axios.post(`/friend_requests/${_id}/accept`).then((res) => {\r\n      reloadUser();\r\n      const updatedUser = currentUser;\r\n      updatedUser.friends.push(user);\r\n      setCurrentUser(updatedUser);\r\n      setReceivedRequest(undefined);\r\n    });\r\n  };\r\n\r\n  const declineFriend = (_id) => {\r\n    //const _id = e.target.getAttribute('data-id');\r\n    Axios.post(`/friend_requests/${_id}/decline`).then((res) => {\r\n      setRequests(requests.filter((request) => request._id !== res.data._id));\r\n      setReceivedRequest(undefined);\r\n    });\r\n  };\r\n\r\n  const deleteFriend = (user_id) => {\r\n    Axios.delete(`/friend_requests/${user_id}/delete`, config).then((res) => {\r\n      reloadUser();\r\n      setIsFriends(false);\r\n      setSentRequest(undefined);\r\n      setReceivedRequest(undefined);\r\n    });\r\n  };\r\n\r\n  // filter sent and received requests whenever the requests array changes\r\n  useEffect(() => {\r\n    async.series(\r\n      [\r\n        function (callback) {\r\n          const sent = requests.filter(\r\n            (request) => request.from._id === user._id\r\n          );\r\n          callback(null, sent);\r\n        },\r\n        function (callback) {\r\n          const received = requests.filter(\r\n            (request) => request.to._id === user._id\r\n          );\r\n          callback(null, received);\r\n        },\r\n      ],\r\n      (err, results) => {\r\n        setSentRequest(\r\n          results[0].find((req) => req.to._id === currentUser._id)\r\n        );\r\n        setReceivedRequest(\r\n          results[1].find((req) => req.from._id === currentUser._id)\r\n        );\r\n      }\r\n    );\r\n  }, [requests]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    // Set profile user\r\n    if (user_id) {\r\n      // Set current user based on url\r\n      Axios.get(`/users/${user_id}`).then((res) => {\r\n        if (currentUser._id !== res.data._id) setCurrentUser(res.data);\r\n      });\r\n    }\r\n\r\n    // Fetch posts\r\n    Axios.get(\"/posts\").then((res) => {\r\n      setPosts(res.data.filter((post) => post.user._id === currentUser._id));\r\n      setLoading(false);\r\n    });\r\n    // Fetch requests\r\n    Axios.get(\"/friend_requests\", config)\r\n      .then((res) => {\r\n        setRequests(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // Reload the page\r\n    setSubPage(\"main\");\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    setSameUser(currentUser._id === user._id);\r\n    // Establish friendship status\r\n    setIsFriends(checkIsFriend());\r\n  }, [currentUser, user]);\r\n\r\n  // Get posts with photos\r\n  useEffect(() => {\r\n    setPhotos(posts.map((post) => (post.image ? post : \"\")));\r\n  }, [posts]);\r\n\r\n  useEffect(() => {\r\n    if (profileUser) setCurrentUser(profileUser);\r\n  }, [profileUser]);\r\n\r\n  return (\r\n    currentUser && (\r\n      <Container fluid className=\"p-0\">\r\n        <CSSTransition\r\n          in={loading}\r\n          timeout={300}\r\n          classNames=\"fade\"\r\n          unmountOnExit\r\n        >\r\n          <LoadingOverlay />\r\n        </CSSTransition>\r\n        {profilePhotoForm && (\r\n          <ImageForm\r\n            path={`/users/${user._id}/profile_photo`}\r\n            reloadUser={reloadUser}\r\n            resources={user}\r\n            setImageForm={setProfilePhotoForm}\r\n          />\r\n        )}\r\n        {coverPhotoForm && (\r\n          <ImageForm\r\n            path={`/users/${user._id}/cover_photo`}\r\n            reloadUser={reloadUser}\r\n            resources={user}\r\n            setImageForm={setCoverPhotoForm}\r\n          />\r\n        )}\r\n        <div style={{ background: \"white\" }}>\r\n          {showNav && (\r\n            <Navbar\r\n              key=\"profile\"\r\n              setUser={setUser}\r\n              users={users}\r\n              user={user}\r\n              reloadUser={reloadUser}\r\n            />\r\n          )}\r\n          <ProfileSection className=\"px-0\">\r\n            {currentUser.cover_photo ? (\r\n              <a href={user.cover_photo}>\r\n                <CoverPhoto src={currentUser.cover_photo}></CoverPhoto>\r\n              </a>\r\n            ) : (\r\n              <DefaultCoverPhoto />\r\n            )}\r\n            {sameUser && (\r\n              <GrayHoverDiv onClick={() => setCoverPhotoForm(true)}>\r\n                <p className=\"mb-0\">Change Cover Photo</p>\r\n              </GrayHoverDiv>\r\n            )}\r\n            {isFriends && (\r\n              <GrayHoverDiv\r\n                data-id={currentUser._id}\r\n                onClick={() => setCollapse(!collapse)}\r\n              >\r\n                <p className=\"mb-0\">\r\n                  <FaCheck /> Friends\r\n                </p>\r\n                {/* Collapsed div for friend options */}\r\n                {collapse && (\r\n                  <CollapseDiv>\r\n                    <Option onClick={() => deleteFriend(currentUser._id)}>\r\n                      Remove Friend\r\n                    </Option>\r\n                  </CollapseDiv>\r\n                )}\r\n              </GrayHoverDiv>\r\n            )}\r\n            {receivedRequest && (\r\n              <FlexDivGray>\r\n                <p className=\"mb-1\">\r\n                  {currentUser.display_name ||\r\n                    currentUser.first_name + \" \" + currentUser.last_name}{\" \"}\r\n                  has sent you a friend request\r\n                </p>\r\n                <div className=\"d-block\">\r\n                  <Button\r\n                    onClick={() => confirmFriend(receivedRequest._id)}\r\n                    className=\"mr-2\"\r\n                    color=\"success\"\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => declineFriend(receivedRequest._id)}\r\n                    color=\"danger\"\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </FlexDivGray>\r\n            )}\r\n            {sentRequest && (\r\n              <GrayHoverDiv>\r\n                <p className=\"mb-0\">\r\n                  <FaCheck /> Sent Friend Request\r\n                </p>\r\n              </GrayHoverDiv>\r\n            )}\r\n            {!sentRequest && !receivedRequest && !sameUser && !isFriends && (\r\n              <GrayHoverDiv onClick={() => sendRequest(currentUser._id)}>\r\n                <p className=\"mb-0\">Send Friend Request</p>\r\n              </GrayHoverDiv>\r\n            )}\r\n            <ProfilePhotoWrapper>\r\n              <a href={currentUser.profile_photo}>\r\n                <ProfilePhoto src={currentUser.profile_photo}></ProfilePhoto>\r\n              </a>\r\n              {currentUser._id === user._id && (\r\n                <ChangeProfilePhoto onClick={() => setProfilePhotoForm(true)}>\r\n                  <AiFillCamera fill=\"black\" size={24} />\r\n                </ChangeProfilePhoto>\r\n              )}\r\n            </ProfilePhotoWrapper>\r\n          </ProfileSection>\r\n          <h1 className=\"text-center\">\r\n            {currentUser.display_name ||\r\n              currentUser.first_name + \" \" + currentUser.last_name}\r\n          </h1>\r\n          {/* Small Description */}\r\n          {currentUser.description.length && (\r\n            <Description\r\n              href=\"https://github.com/irlgabriel\"\r\n              dangerouslySetInnerHTML={{ __html: currentUser.description }}\r\n            ></Description>\r\n          )}\r\n          <ProfileHeader>\r\n            <hr className=\"my-2\" />\r\n            <ProfileNav>\r\n              <NavItem\r\n                onClick={() => setSubPage(\"main\")}\r\n                active={subPage === \"main\"}\r\n              >\r\n                Posts\r\n              </NavItem>\r\n              <NavItem\r\n                onClick={() => setSubPage(\"photos\")}\r\n                active={subPage === \"photos\"}\r\n              >\r\n                Photos\r\n              </NavItem>\r\n              <NavItem\r\n                onClick={() => setSubPage(\"friends\")}\r\n                active={subPage === \"friends\"}\r\n              >\r\n                Friends\r\n              </NavItem>\r\n            </ProfileNav>\r\n          </ProfileHeader>\r\n        </div>\r\n        {subPage === \"main\" && (\r\n          <Main>\r\n            <Col className=\"pt-3 d-none d-lg-block\" sm=\"5\">\r\n              <p className=\"font-weight-bold mb-0\">Photos</p>\r\n              <Photos user={currentUser} photos={photos} />\r\n            </Col>\r\n            <Col className=\"pt-3\">\r\n              {currentUser._id === user._id && (\r\n                <PostForm posts={posts} setPosts={setPosts} user={user} />\r\n              )}\r\n              {currentUser !== user && (\r\n                <p className=\"font-weight-bold mb-0\">Posts</p>\r\n              )}\r\n              {}\r\n              {!posts.length && (\r\n                <WhiteContainer className=\"mt-2\">\r\n                  <p>No Posts available</p>\r\n                </WhiteContainer>\r\n              )}\r\n              {posts.map((post) => (\r\n                <Post\r\n                  key={post._id}\r\n                  user={user}\r\n                  posts={posts}\r\n                  post={post}\r\n                  setPosts={setPosts}\r\n                />\r\n              ))}\r\n            </Col>\r\n          </Main>\r\n        )}\r\n        {subPage === \"photos\" && <Photos user={currentUser} photos={photos} />}\r\n        {subPage === \"friends\" && (\r\n          <FriendsProfile user={user} currentUser={currentUser} />\r\n        )}\r\n      </Container>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Register\\Register.js",["226"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Form, Input, Label, FormGroup, Button } from \"reactstrap\";\r\nimport { FlashMessage } from \"./Register.components\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Register = ({ user, reloadUser, getUser }) => {\r\n  const location = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPass, setConfirmPass] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [message, setMessage] = useState(undefined);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPass) {\r\n      setMessage('Passwords do not match');\r\n      return;\r\n    }\r\n    axios\r\n      .post(\"/register\", {\r\n        email,\r\n        password,\r\n        first_name: firstName,\r\n        last_name: lastName,\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem('token', res.data);\r\n        getUser(res.data);\r\n        location.push('/');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setMessage(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) location.push(\"/home\");\r\n  }, [user]);\r\n\r\n  // Clear message after 3s\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if(message) setMessage(undefined);\r\n    }, 3000)\r\n    \r\n  }, [message])\r\n\r\n  return (\r\n    <Container style={{ width: \"600px\", paddingTop: \"60px\", minHeight: '100vh' }}>\r\n      <Link to='/'>Back</Link>\r\n      <h3 className=\"text-center\">Register</h3>\r\n      <CSSTransition\r\n        in={message}\r\n        timeout={300}\r\n        classNames='fade'\r\n        unmountOnExit\r\n      >\r\n        <FlashMessage>{message}</FlashMessage>\r\n      </CSSTransition>\r\n      <Form onSubmit={(e) => submitHandler(e)}>\r\n        <FormGroup>\r\n          <Label for=\"email\">Email</Label>\r\n          <Input\r\n            type=\"email\"\r\n            placeholder=\"Email..\"\r\n            name=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"first_name\">First Name</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"First Name..\"\r\n            name=\"first_name\"\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"last_name\">Last Name</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Last Name\"\r\n            name=\"last_name\"\r\n            onChange={(e) => setLastName(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password\">Password</Label>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            name=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"password_conf\">Password confirmation</Label>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"********\"\r\n            name=\"password_conf\"\r\n            onChange={(e) => setConfirmPass(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup className=\"text-center\">\r\n          <Button type=\"submit\" color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </FormGroup>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Friends\\Friends.js",["227","228","229","230","231"],"import { useState, useEffect } from \"react\";\r\nimport { Navbar } from \"../../Components\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport { Profile } from \"../../Pages/\";\r\nimport {\r\n  FriendRequest,\r\n  LoadingOverlay,\r\n  FriendSuggestion,\r\n} from \"../../Components\";\r\nimport Axios from \"axios\";\r\n\r\nconst Friends = ({ reloadUser, user, setUser }) => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [requests, setRequests] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [previewUserPosts, setPreviewUserPosts] = useState([]);\r\n  const [previewUser, setPreviewUser] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sentRequests, setSentRequests] = useState([]);\r\n  const [receivedRequests, setReceivedRequests] = useState([]);\r\n\r\n  const config = localStorage.getItem(\"token\") && {\r\n    headers: {\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  const clickHandler = (id) => {\r\n    //e.stopPropagation();\r\n    Axios.get(`/users/${id}`).then((res) => {\r\n      setPreviewUser(res.data);\r\n    });\r\n  };\r\n\r\n  /* Friend request logic functions */\r\n  const sendRequest = (to) => {\r\n    //const to = e.target.getAttribute('data-id');\r\n    Axios.post(`/friend_requests/${to}/send`, {}, config).then((res) => {\r\n      setSuggestions(\r\n        suggestions.filter((suggestion) => suggestion._id !== res.data.to._id)\r\n      );\r\n      setRequests([...requests, res.data]);\r\n    });\r\n  };\r\n\r\n  const confirmFriend = (_id) => {\r\n    //const _id = e.target.getAttribute('data-id');\r\n    Axios.post(`/friend_requests/${_id}/accept`).then((res) => {\r\n      setRequests(requests.filter((request) => request._id !== res.data._id));\r\n      reloadUser();\r\n    });\r\n  };\r\n\r\n  const declineFriend = (_id) => {\r\n    //const _id = e.target.getAttribute('data-id');\r\n    Axios.post(`/friend_requests/${_id}/decline`).then((res) => {\r\n      setRequests(requests.filter((request) => request._id !== res.data._id));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Promise.all([\r\n      Axios.get(\"/friend_requests/recommendations\", config),\r\n      Axios.get(\"/friend_requests\", config),\r\n      Axios.get(\"/posts\"),\r\n    ]).then((results) => {\r\n      setSuggestions(results[0].data);\r\n      setRequests(results[1].data);\r\n      setPosts(results[2].data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  // when previewUser changes we change the posts to match theirs\r\n  useEffect(() => {\r\n    if (previewUser) {\r\n      setPreviewUserPosts(\r\n        posts.filter((post) => post.user._id === previewUser._id)\r\n      );\r\n    }\r\n  }, [previewUser]);\r\n\r\n  // filter sent and received requests whenever the requests array changes\r\n  useEffect(() => {\r\n    setSentRequests(\r\n      requests.filter((request) => request.from._id === user._id)\r\n    );\r\n    setReceivedRequests(\r\n      requests.filter((request) => request.to._id === user._id)\r\n    );\r\n  }, [requests]);\r\n\r\n  return (\r\n    <Container fluid className=\"px-0\">\r\n      {/* Loading overlay */}\r\n      {loading && <LoadingOverlay />}\r\n      <Navbar\r\n        key=\"friends\"\r\n        setUser={setUser}\r\n        reloadUser={reloadUser}\r\n        user={user}\r\n      />\r\n      <Row className=\"p-0 m-0\" style={{ height: \"auto\" }}>\r\n        <Col\r\n          id=\"friends-col\"\r\n          className=\"d-none d-md-block box-shadow-right p-0 px-2\"\r\n          md=\"4\"\r\n          lg=\"3\"\r\n          style={{ background: \"white\" }}\r\n        >\r\n          <h2>Friends</h2>\r\n          <h5>{receivedRequests.length} Friend Requests</h5>\r\n          <hr className=\"my-1\"></hr>\r\n          {/* Friend Requests */}\r\n          {receivedRequests.map((request) => (\r\n            <FriendRequest\r\n              onClick={clickHandler}\r\n              _id={request._id}\r\n              confirmFriend={confirmFriend}\r\n              declineFriend={declineFriend}\r\n              key={request._id}\r\n              from={request.from}\r\n            />\r\n          ))}\r\n          <h5>People you may know</h5>\r\n          <hr className=\"my-1\"></hr>\r\n          {/* Friend Suggestions */}\r\n          {suggestions.map((to) => (\r\n            <FriendSuggestion\r\n              onClick={clickHandler}\r\n              sendRequest={sendRequest}\r\n              key={to._id}\r\n              to={to}\r\n            />\r\n          ))}\r\n        </Col>\r\n        <Col id=\"friends-profile\" className=\"p-0\">\r\n          {previewUser && (\r\n            <Profile\r\n              showNav={false}\r\n              user={user}\r\n              posts={previewUserPosts}\r\n              setPosts={setPreviewUserPosts}\r\n              profileUser={previewUser}\r\n              requests={requests}\r\n              setRequests={setRequests}\r\n              reloadUser={reloadUser}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Friends;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\ProtectedRoute\\ProtectedRoute.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\PostPage\\PostPage.js",["232"],"import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Container } from \"reactstrap\";\r\nimport { Post, Navbar, LoadingOverlay } from \"../../Components\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport axios from 'axios';\r\n\r\nconst PostPage = (props) => {\r\n  \r\n  const { post_id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [post, setPost] = useState(undefined)\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    // GET All posts\r\n    axios.get('/posts')\r\n    .then(res => {\r\n      setPosts(res.data)\r\n    })\r\n    // GET This post\r\n    axios.get('/posts/' + post_id)\r\n    .then(res => {\r\n      setPost(res.data);\r\n      setLoading(false);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Container fluid className=\"m-0 p-0\">\r\n      <CSSTransition\r\n        in={loading}\r\n        timeout={300}\r\n        classNames='fade'\r\n        unmountOnExit\r\n      >\r\n        <LoadingOverlay />\r\n      </CSSTransition>\r\n      <Navbar key=\"posts\" {...props} />\r\n      <Container className=\"mt-2\">\r\n        {post && <Post {...props} post={post} posts={posts} setPosts={setPosts} />}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\ProfileFriends\\ProfileFriends.js",["233"],"\r\nconst ProfileFriends = ({}) => {\r\n  return (\r\n    <>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileFriends;","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\FacebookLogin\\FacebookLogin.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Photos\\Photos.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Photos\\Photos.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Register\\Register.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Profile\\Profile.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\index.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Index\\Index.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Pages\\Home\\Home.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\PostForm\\PostForm.js",["234","235"],"import { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Input, FormGroup, Button } from \"reactstrap\";\r\nimport {\r\n  RoundImage,\r\n  GrayHover,\r\n  Container,\r\n  CloseIcon,\r\n  ImageWrapper,\r\n  Image,\r\n} from \"./PostForm.components\";\r\nimport { FcStackOfPhotos } from \"react-icons/fc\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingOverlay } from \"..\";\r\n\r\nconst PostForm = ({ user, setPosts, posts }) => {\r\n  const imageInputRef = useRef(null);\r\n  const textInputRef = useRef(null);\r\n\r\n  const [displayName, setDisplayName] = useState(user.display_name);\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [expandForm, setExpandForm] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (!content && !file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"content\", content);\r\n    formData.append(\"image\", file);\r\n\r\n    setLoading(true);\r\n    axios\r\n      .post(\"/posts\", formData, {\r\n        headers: {\r\n          Authorization: \"bearer \" + token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setPosts([res.data, ...posts]);\r\n        setContent(\"\");\r\n        setImageSrc(null);\r\n        setFile(null);\r\n        setExpandForm(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleImageFormClick = () => {\r\n    if (imageInputRef) {\r\n      imageInputRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleImageSelect = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n      setFile(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (file) {\r\n      setImageSrc(window.URL.createObjectURL(file));\r\n      setExpandForm(true);\r\n    }\r\n  }, [file]);\r\n\r\n  useEffect(() => {\r\n    setDisplayName(user.first_name || user.display_name.split(\" \")[0]);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <LoadingOverlay />}\r\n      <Form encType=\"multipart/form-data\" onSubmit={(e) => submitHandler(e)}>\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n          <Link to=\"/profile\">\r\n            <RoundImage\r\n              className=\"mr-2\"\r\n              src={user.profile_photo}\r\n              width=\"40px\"\r\n            />\r\n          </Link>\r\n          <div className=\"w-100\">\r\n            <textarea\r\n              ref={textInputRef}\r\n              id=\"post_input_form\"\r\n              onFocus={() => setExpandForm(true)}\r\n              style={{\r\n                height: \"32px\",\r\n                alignItems: \"center\",\r\n                background: \"rgb(240, 242, 245)\",\r\n                borderRadius: \"24px\",\r\n              }}\r\n              value={content}\r\n              className=\"w-100 pl-2 pr-5 d-flex\"\r\n              type=\"textarea\"\r\n              name=\"content\"\r\n              onChange={(e) => {\r\n                setContent(e.target.value);\r\n              }}\r\n              placeholder={`What's on your mind, ${displayName}?`}\r\n            />\r\n          </div>\r\n        </div>\r\n        {imageSrc && (\r\n          <CSSTransition>\r\n            <ImageWrapper\r\n              className=\"py-2\"\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <CloseIcon onClick={() => setImageSrc(null)} />\r\n              <Image src={imageSrc} alt=\"selected-file\" />\r\n            </ImageWrapper>\r\n          </CSSTransition>\r\n        )}\r\n\r\n        <CSSTransition\r\n          in={expandForm}\r\n          timeout={300}\r\n          classNames=\"fade\"\r\n          unmountOnExit\r\n        >\r\n          <FormGroup\r\n            style={{ justifyContent: \"center\" }}\r\n            className=\"d-flex w-100 py-2\"\r\n          >\r\n            <Button\r\n              style={{ background: \"lightblue\" }}\r\n              type=\"submit\"\r\n              className=\"px-5\"\r\n            >\r\n              Post!\r\n            </Button>\r\n          </FormGroup>\r\n        </CSSTransition>\r\n        <hr className=\"my-2\" />\r\n        <GrayHover onClick={handleImageFormClick}>\r\n          <input\r\n            onChange={handleImageSelect}\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            ref={imageInputRef}\r\n          />\r\n          <FcStackOfPhotos size={36} className=\"mr-2\" />\r\n          <p className=\"m-0\">Photos</p>\r\n        </GrayHover>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Post\\Post.js",["236","237"],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { Form, Input, Button, FormGroup } from \"reactstrap\";\r\nimport {\r\n  PostContainer,\r\n  RoundImage,\r\n  Header,\r\n  FlexContainer,\r\n  Body,\r\n  Footer,\r\n  TopFooter,\r\n  BottomFooter,\r\n  RoundWrapper,\r\n  FooterItem,\r\n  RoundedContainer,\r\n  RoundedWrapper,\r\n  CommentsContainer,\r\n  ClickDiv,\r\n  FunctionalItem,\r\n} from \"./Post.components\";\r\nimport { Comment, CommentForm, LikesModal } from \"..\";\r\nimport {\r\n  AiFillLike,\r\n  AiOutlineLike,\r\n  AiFillDelete,\r\n  AiFillEdit,\r\n} from \"react-icons/ai\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { VscComment } from \"react-icons/vsc\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst Post = ({ user, posts, post, setPosts }) => {\r\n\r\n  const [file, setFile] = useState(post.image);\r\n  const [content, setContent] = useState('');\r\n  const [edit, setEdit] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [settingsDropdown, setSettingsDropdown] = useState(false);\r\n  const [commentsDropdown, setCommentsDropdown] = useState(false);\r\n  const [likesModal, setLikesModal] = useState(false);\r\n\r\n  const config = localStorage.getItem('token') &&  {\r\n    headers: {\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  const editHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('content', content);\r\n    if(file) formData.append('image', file);\r\n    axios\r\n      .put(`/posts/${post._id}`, formData, config)\r\n      .then((res) => {\r\n        setPosts(\r\n          posts.map((post) => (post._id === res.data._id ? res.data : post))\r\n        );\r\n        setEdit(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    window.confirm(\r\n      \"Are you sure you want to delete this post? This action cannot be undone!\"\r\n    ) &&\r\n      axios\r\n        .delete(`/posts/${post._id}`, config)\r\n        .then((res) => {\r\n          setPosts(posts.filter((post) => post._id !== res.data._id));\r\n          setSettingsDropdown(false);\r\n        })\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  const likePost = () => {\r\n    axios\r\n      .post(\r\n        `/posts/${post._id}/like`,\r\n        {},\r\n        config\r\n      )\r\n      .then((res) => {\r\n        setPosts(\r\n          posts.map((post) => (post._id === res.data._id ? res.data : post))\r\n        );\r\n      });\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    // Reset field height\r\n    e.target.style.height = \"inherit\";\r\n\r\n    // Get the computed styles for the element\r\n    const computed = window.getComputedStyle(e.target);\r\n\r\n    // Calculate the height\r\n    const height =\r\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\r\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\r\n      e.target.scrollHeight +\r\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\r\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\r\n\r\n    e.target.style.height = `${height}px`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // GET Comments\r\n    axios\r\n      .get(`/posts/${post._id}/comments`)\r\n      .then((res) => {\r\n        setComments(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    //\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const textarea = document.querySelector(\"textarea\");\r\n    if (textarea) {\r\n      textarea.style.height = \"inherit\";\r\n      const computed = window.getComputedStyle(textarea);\r\n      const height =\r\n        parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\r\n        parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\r\n        textarea.scrollHeight +\r\n        parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\r\n        parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\r\n      textarea.style.height = height + \"px\";\r\n    }\r\n  }, [edit]);\r\n\r\n  return (\r\n    <PostContainer className=\"mb-2\">\r\n      <Header className=\"mb-2\">\r\n        <Link\r\n          to={\r\n            post.user._id === user._id ? \"/profile\" : `/users/${post.user._id}`\r\n          }\r\n        >\r\n          <RoundImage src={post.user.profile_photo} />\r\n        </Link>\r\n        <FlexContainer>\r\n          <div>\r\n            <h4 className=\"mb-0\">\r\n              {post.user.display_name ||\r\n                (post.user.first_name + \" \" + post.user.last_name)}\r\n            </h4>\r\n            <p style={{ fontSize: \"13px\" }} className=\"mb-0 text-muted\">\r\n              {moment(post.createdAt).fromNow()}\r\n            </p>\r\n          </div>\r\n          {(user._id === post.user._id) && (\r\n            <RoundedWrapper\r\n              onClick={() => setSettingsDropdown(!settingsDropdown)}\r\n            >\r\n              <BsThreeDotsVertical size=\"24\" />\r\n            </RoundedWrapper>\r\n          )}\r\n        </FlexContainer>\r\n\r\n        {/** Settings Dropdown  */}\r\n        {settingsDropdown && (\r\n          <RoundedContainer>\r\n            <FunctionalItem\r\n              onClick={() => {\r\n                setEdit(true);\r\n                setSettingsDropdown(false);\r\n              }}\r\n            >\r\n              <AiFillEdit color=\"palegoldenrod\" size={32} />\r\n              &nbsp;Edit Post\r\n            </FunctionalItem>\r\n            <hr className=\"my-2\" />\r\n            <FunctionalItem onClick={() => deleteHandler()}>\r\n              <AiFillDelete color=\"red\" size={32} />\r\n              &nbsp;Delete Post\r\n            </FunctionalItem>\r\n          </RoundedContainer>\r\n        )}\r\n      </Header>\r\n      {!edit && (\r\n        <Body>\r\n          <p\r\n            className=\"mb-1\"\r\n            dangerouslySetInnerHTML={{ __html: post.content }}\r\n          ></p>\r\n          {(post.image && post.image.url) && (\r\n            <img className=\"mb-2\" width=\"100%\" src={post.image.url} />\r\n          )}\r\n        </Body>\r\n      )}\r\n      {edit && (\r\n        <Form onSubmit={(e) => editHandler(e)}>\r\n          <FormGroup>\r\n            <Input\r\n              placeholder='Content...'\r\n              type=\"textarea\"\r\n              onFocus={(e) => onChangeHandler(e)}\r\n              value={content}\r\n              onChange={(e) => {\r\n                setContent(e.target.value);\r\n                onChangeHandler(e);\r\n              }}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup style={{ marginLeft: \"12px\" }}>\r\n            <Input\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n              type=\"file\"\r\n              name=\"image\"\r\n            />\r\n            <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\r\n          </FormGroup>\r\n          <FormGroup className=\"d-flex align-items-center\">\r\n            <Button\r\n              className=\"ml-auto mr-2\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              size=\"sm\"\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => setEdit(false)}\r\n              color=\"danger\"\r\n              size=\"sm\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </FormGroup>\r\n        </Form>\r\n      )}\r\n      <Footer>\r\n        <TopFooter>\r\n          <ClickDiv onClick={() => setLikesModal(true)} className=\"d-flex\">\r\n            <RoundWrapper className=\"mr-1\" bgColor=\"royalblue\">\r\n              <AiFillLike\r\n                data-toggle=\"tooltip\"\r\n                data-html=\"true\"\r\n                title={<em></em>}\r\n                size={12}\r\n                fill=\"white\"\r\n              />\r\n            </RoundWrapper>\r\n            <p style={{ fontSize: \"14px\" }} className=\"mb-0\">\r\n              {post.likes.length}\r\n            </p>\r\n          </ClickDiv>\r\n          <ClickDiv onClick={() => setCommentsDropdown(!commentsDropdown)}>\r\n            <p className=\"mb-0\">{comments.length} Comments</p>\r\n          </ClickDiv>\r\n        </TopFooter>\r\n        <hr className=\"my-1\" />\r\n        <BottomFooter>\r\n          <FooterItem onClick={() => likePost()}>\r\n            {!post.likes.some((e) => e._id === user._id) ? (\r\n              <div style={{display: 'flex', alignItems: 'center'}}>\r\n                <AiOutlineLike size={20} />\r\n                <span>&nbsp;Like</span>\r\n              </div>\r\n            ) : (\r\n              <div style={{display: 'flex', alignItems: 'center'}}>\r\n                <AiFillLike size={20} fill=\"royalblue\" />\r\n                <span style={{color: 'royalblue'}}>&nbsp;Liked</span>\r\n              </div>\r\n            )}\r\n          </FooterItem>\r\n          <FooterItem onClick={() => setCommentsDropdown(!commentsDropdown)}>\r\n            <VscComment size={20} />\r\n            &nbsp;Comment\r\n          </FooterItem>\r\n        </BottomFooter>\r\n      </Footer>\r\n\r\n      {/** Comment dropdown */}\r\n      {commentsDropdown && (\r\n        <CommentsContainer>\r\n          <hr className=\"my-1\" />\r\n          {comments\r\n            .filter((comment) => !comment.hasOwnProperty(\"comment\"))\r\n            .map((comment) => (\r\n              <Comment\r\n                key={comment._id}\r\n                comments={comments}\r\n                post={post}\r\n                user={user}\r\n                comment={comment}\r\n                setComments={setComments}\r\n              />\r\n            ))}\r\n          <CommentForm\r\n            post={post}\r\n            user={user}\r\n            setComments={setComments}\r\n            comments={comments}\r\n          />\r\n        </CommentsContainer>\r\n      )}\r\n\r\n      {/* Likes Modal (absolutely positioned) */}\r\n      <CSSTransition\r\n        in={likesModal}\r\n        timeout={300}\r\n        classNames='fade'\r\n        unmountOnExit\r\n      >\r\n        <LikesModal setLikesModal={setLikesModal} likes={post.likes} />\r\n      </CSSTransition>\r\n    </PostContainer>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Navbar\\Navbar.js",["238","239"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Nav, Button, Col, Input } from \"reactstrap\";\r\nimport {\r\n  NavMidItem,\r\n  RoundWrapper,\r\n  CollapsableDiv,\r\n  RoundImage,\r\n  GrayHover,\r\n  LinkGreyHover,\r\n  RoundedUserDiv,\r\n  TopRightUserImg,\r\n  RegularLink,\r\n  NewNotifications,\r\n  MenuIcon,\r\n  SearchContainer,\r\n  SearchResult,\r\n  SmallRoundImg,\r\n  Menu,\r\n  LockedOverlay,\r\n  NewFriendsNotifications,\r\n  FlexDiv,\r\n  DeleteAccountDiv,\r\n  Warning,\r\n} from \"./Navbar.components\";\r\n/* React Icons */\r\nimport {\r\n  FaFacebook,\r\n  FaUserFriends,\r\n  FaFacebookMessenger,\r\n  FaDoorOpen,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  AiOutlineSearch,\r\n  AiFillHome,\r\n  AiFillBell,\r\n  AiFillLock,\r\n  AiFillDelete,\r\n  AiFillWarning,\r\n} from \"react-icons/ai\";\r\nimport { GrAdd } from \"react-icons/gr\";\r\nimport { GoTriangleDown } from \"react-icons/go\";\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Notification } from \"..\";\r\n\r\nconst Navbar = ({ setUser, reloadUser, user }) => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const config = localStorage.getItem(\"token\") && {\r\n    headers: {\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  const fullname = (user) => {\r\n    return user.display_name || user.first_name + \" \" + user.last_name;\r\n  };\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [menu, setMenu] = useState(false);\r\n  const [showSearch, setShowSearch] = useState(false);\r\n  const [searchDropdown, setSearchDropdown] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n  const [userDropdown, setUserDropdown] = useState(false);\r\n  const [warning, setWarning] = useState(false);\r\n  const [notificationDropdown, setNotificationDropdown] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [newNotifications, setNewNotifications] = useState([]);\r\n  const [newRequests, setNewRequests] = useState([]);\r\n\r\n  const clearNotifications = () => {\r\n    axios.delete(\"/notifications\", config).then((res) => {\r\n      setNotifications([]);\r\n    });\r\n  };\r\n\r\n  const deleteAccount = () => {\r\n    window.confirm(\r\n      \"Are you sure you want to delete your account? This action cannot be undone!\"\r\n    ) &&\r\n      axios.delete(\"/users\", config).then((res) => {\r\n        localStorage.removeItem(\"token\");\r\n        setUser(undefined);\r\n      });\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    // delete the token\r\n    localStorage.removeItem(\"token\");\r\n    setUser(undefined);\r\n    // delete the cookie if there's any\r\n    document.cookie = \"token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get Notification\r\n    axios\r\n      .get(`/notifications`, config)\r\n      .then((res) => {\r\n        setNotifications(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // Get Users\r\n    axios.get(\"/users\").then((res) => {\r\n      setUsers(res.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get new friend requests\r\n    axios.get(\"/friend_requests\", config).then((res) => {\r\n      setNewRequests(res.data.filter((request) => request.to._id === user._id));\r\n    });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    setNewNotifications(\r\n      notifications.filter((notification) => notification.clicked !== true)\r\n    );\r\n  }, [notifications]);\r\n\r\n  useEffect(() => {\r\n    // search logic\r\n    if (query.length) {\r\n      setSearchDropdown(true);\r\n      setResults(\r\n        users.filter((user) =>\r\n          fullname(user).toLowerCase().includes(query.toLowerCase())\r\n        )\r\n      );\r\n    } else {\r\n      setSearchDropdown(false);\r\n    }\r\n  }, [query, users]);\r\n\r\n  return (\r\n    <Nav className=\"sticky-top px-1\">\r\n      <Col className=\"align-items-center d-flex position-relative\">\r\n        {!showSearch && (\r\n          <Link className=\"d-none d-md-block\" to=\"/home\">\r\n            <FaFacebook className=\"mr-2\" fill=\"royalblue\" size={40} />\r\n          </Link>\r\n        )}\r\n        {!showSearch && (\r\n          <RoundWrapper onClick={() => setShowSearch(true)}>\r\n            <AiOutlineSearch size={20} />\r\n          </RoundWrapper>\r\n        )}\r\n        {showSearch && (\r\n          <div className=\"d-flex align-items-center\">\r\n            <RoundWrapper\r\n              className=\"mr-2 px-2\"\r\n              onClick={() => setShowSearch(false)}\r\n            >\r\n              <BsArrowLeft size={16} />\r\n            </RoundWrapper>\r\n            <Input\r\n              style={{ borderRadius: \"21px\", width: \"90%\" }}\r\n              type=\"text\"\r\n              className=\"py-2\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Search Facebook\"\r\n            />\r\n          </div>\r\n        )}\r\n        <CSSTransition\r\n          in={searchDropdown && showSearch}\r\n          timeout={300}\r\n          classNames=\"fade\"\r\n          unmountOnExit\r\n        >\r\n          <SearchContainer>\r\n            {results.map((result) => (\r\n              <Link to={`/users/${result._id}`}>\r\n                <SearchResult>\r\n                  <SmallRoundImg\r\n                    className=\"mr-2\"\r\n                    src={result.profile_photo}\r\n                  ></SmallRoundImg>\r\n                  <p className=\"mb-0\">{fullname(result)}</p>\r\n                </SearchResult>\r\n              </Link>\r\n            ))}\r\n          </SearchContainer>\r\n        </CSSTransition>\r\n      </Col>\r\n\r\n      {/** >768px */}\r\n      <Col sm=\"5\" id=\"nav-mid\" className=\"d-flex align-items-center\">\r\n        <NavMidItem\r\n          to=\"/home\"\r\n          active={location.pathname === \"/home\"}\r\n          className=\"mid-nav-item\"\r\n        >\r\n          <AiFillHome\r\n            size={32}\r\n            fill={location.pathname === \"/home\" ? \"royalblue\" : \"gray\"}\r\n            className=\"mr-2\"\r\n          />\r\n        </NavMidItem>\r\n        <NavMidItem\r\n          to=\"/friends\"\r\n          active={location.pathname === \"/friends\"}\r\n          className=\"mid-nav-item\"\r\n        >\r\n          {newRequests.length ? (\r\n            <NewFriendsNotifications count={newRequests.length} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <FaUserFriends\r\n            fill={location.pathname === \"/friends\" ? \"royalblue\" : \"gray\"}\r\n            size={32}\r\n          />\r\n        </NavMidItem>\r\n      </Col>\r\n      {/** <768px */}\r\n      <Col className=\"position-relative align-items-center d-flex d-md-none\">\r\n        <MenuIcon\r\n          onClick={() => {\r\n            setMenu(!menu);\r\n            setNotificationDropdown(false);\r\n            setUserDropdown(false);\r\n          }}\r\n        />\r\n        <CSSTransition in={menu} timeout={300} classNames=\"fade\" unmountOnExit>\r\n          <Menu>\r\n            <GrayHover>\r\n              <LinkGreyHover to=\"/home\">Home</LinkGreyHover>\r\n            </GrayHover>\r\n            <GrayHover>\r\n              <LinkGreyHover to=\"/friends\">Friends</LinkGreyHover>\r\n            </GrayHover>\r\n          </Menu>\r\n        </CSSTransition>\r\n      </Col>\r\n\r\n      <Col className=\"d-flex justify-content-end align-items-center\">\r\n        <RegularLink to=\"/profile\">\r\n          <RoundedUserDiv\r\n            active={location.pathname === \"/profile\"}\r\n            className=\"mr-1\"\r\n          >\r\n            <TopRightUserImg src={user.profile_photo} className=\"mr-2\" />\r\n            <p className=\"mb-0\">\r\n              {user.first_name\r\n                ? user.first_name\r\n                : user.display_name\r\n                ? user.display_name.split(\" \")[0]\r\n                : \"\"}\r\n            </p>\r\n          </RoundedUserDiv>\r\n        </RegularLink>\r\n        <RoundWrapper className=\"d-xs-none d-md-flex mr-2\">\r\n          <LockedOverlay>\r\n            <AiFillLock color=\"red\" />\r\n          </LockedOverlay>\r\n          <GrAdd size={16} fill=\"black\" />\r\n        </RoundWrapper>\r\n        <RoundWrapper className=\"d-xs-none d-md-flex mr-2\">\r\n          <LockedOverlay>\r\n            <AiFillLock color=\"red\" />\r\n          </LockedOverlay>\r\n          <FaFacebookMessenger size={16} fill=\"black\" />\r\n        </RoundWrapper>\r\n        <RoundWrapper\r\n          active={notificationDropdown}\r\n          onClick={() => {\r\n            setNotificationDropdown(!notificationDropdown);\r\n            setUserDropdown(false);\r\n            setMenu(false);\r\n          }}\r\n          className=\"mr-2\"\r\n        >\r\n          <AiFillBell\r\n            style={{\r\n              transition: \"all .5s ease-in-out\",\r\n              fill: notificationDropdown ? \"royalblue\" : \"black\",\r\n            }}\r\n            size={16}\r\n            fill=\"black\"\r\n          />\r\n          {newNotifications.length ? (\r\n            <NewNotifications count={newNotifications.length.toString()} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </RoundWrapper>\r\n        <RoundWrapper\r\n          onClick={() => {\r\n            setUserDropdown(!userDropdown);\r\n            setMenu(false);\r\n            setNotificationDropdown(false);\r\n          }}\r\n        >\r\n          <GoTriangleDown\r\n            style={{\r\n              transition: \".3s ease-in-out\",\r\n              transform: userDropdown ? \"rotate(180deg)\" : \"rotate(0deg)\",\r\n              fill: userDropdown ? \"royalblue\" : \"black\",\r\n            }}\r\n            size={16}\r\n            fill=\"black\"\r\n          />\r\n        </RoundWrapper>\r\n      </Col>\r\n\r\n      {/** Collapsable div for user profile */}\r\n      <CSSTransition\r\n        in={userDropdown}\r\n        timeout={300}\r\n        classNames=\"fade\"\r\n        unmountOnExit\r\n      >\r\n        <CollapsableDiv>\r\n          <LinkGreyHover to=\"/profile\">\r\n            <GrayHover>\r\n              <RoundImage src={user.profile_photo} className=\"mr-2\" />\r\n              <div>\r\n                <p\r\n                  style={{ fontSize: \"18px\" }}\r\n                  className=\"font-weight-bold mb-0\"\r\n                >\r\n                  {user.display_name || user.first_name + \" \" + user.last_name}\r\n                </p>\r\n                <p className=\"text-muted mb-0\">See your profile</p>\r\n              </div>\r\n            </GrayHover>\r\n          </LinkGreyHover>\r\n          <hr />\r\n          <GrayHover onClick={() => logoutHandler()}>\r\n            <RoundWrapper className=\"mr-2\">\r\n              <FaDoorOpen size={24} />\r\n            </RoundWrapper>\r\n            <p className=\"mb-0 font-weight-bold\">Log Out</p>\r\n          </GrayHover>\r\n          <Warning\r\n            onClick={() => setWarning(!warning)}\r\n            style={{ userSelect: \"none\" }}\r\n            className=\"d-flex justify-content-end align-items-center\"\r\n          >\r\n            <AiFillWarning fill=\"orange\" size={32} />\r\n            <p style={{ color: \"orange\" }} className=\"mb-0\">\r\n              Warning\r\n            </p>\r\n          </Warning>\r\n          <CSSTransition\r\n            in={warning}\r\n            timeout={300}\r\n            classNames=\"fade\"\r\n            unmountOnExit\r\n          >\r\n            <DeleteAccountDiv onClick={() => deleteAccount()}>\r\n              <AiFillDelete color=\"red\" size={16} className=\"mr-1\" />\r\n              <p\r\n                style={{\r\n                  marginBottom: \"0\",\r\n                  fontSize: \"14px\",\r\n                  color: \"red\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Delete Account\r\n              </p>\r\n            </DeleteAccountDiv>\r\n          </CSSTransition>\r\n        </CollapsableDiv>\r\n      </CSSTransition>\r\n\r\n      {/* Collapsable div for notifications */}\r\n      <CSSTransition\r\n        in={notificationDropdown}\r\n        timeout={300}\r\n        classNames=\"fade\"\r\n        unmountOnExit\r\n      >\r\n        <CollapsableDiv>\r\n          <h3>Notifications</h3>\r\n          <FlexDiv className=\"mb-2 px-2\">\r\n            {notifications.length ? (\r\n              <p className=\"mb-1\">New</p>\r\n            ) : (\r\n              <p>No notifications</p>\r\n            )}\r\n            {notifications.length ? (\r\n              <Button\r\n                onClick={() => clearNotifications()}\r\n                className=\"ml-auto\"\r\n                outline=\"light\"\r\n              >\r\n                Clear all\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </FlexDiv>\r\n          {notifications.map((notification) => (\r\n            <Notification\r\n              key={notification._id}\r\n              notification={notification}\r\n              notifications={notifications}\r\n              setNotifications={setNotifications}\r\n            />\r\n          ))}\r\n        </CollapsableDiv>\r\n      </CSSTransition>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LoadingOverlay\\LoadingOverlay.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Comment\\Comment.js",["240","241"],"import moment from \"moment\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  CommentContainer,\r\n  UserPhoto,\r\n  CommentBody,\r\n  CommentWrapper,\r\n  CommentFooter,\r\n  FooterLink,\r\n  LikesContainer,\r\n  ReplyCount,\r\n} from \"./Comment.components\";\r\nimport { Form, Input, Button, FormGroup } from \"reactstrap\";\r\nimport { Reply } from \"..\";\r\nimport { AiFillLike } from \"react-icons/ai\";\r\nimport { BsArrow90DegDown } from \"react-icons/bs\";\r\nimport { ReplyForm } from \"..\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Comment = ({ level = 0, comments, comment, setComments, user, post }) => {\r\n  const [file, setFile] = useState(post.image);\r\n  const [showReplyForm, setShowReply] = useState(false);\r\n  const [showReplies, setShowReplies] = useState(false);\r\n  const [replies, setReplies] = useState([]);\r\n  const [content, setContent] = useState(comment.content);\r\n  const [showEdit, setEdit] = useState(false);\r\n\r\n  const config = localStorage.getItem(\"token\") && {\r\n    headers: {\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    window.confirm(\r\n      \"Are you sure you want to delete this comment? This action cannot be undone.\"\r\n    ) &&\r\n      axios\r\n        .delete(`/posts/${post._id}/comments/${comment._id}`, config)\r\n        .then((res) => {\r\n          setComments(\r\n            comments.filter((comment) => comment._id !== res.data._id)\r\n          );\r\n        })\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  const likeComment = () => {\r\n    axios\r\n      .post(`/posts/${post._id}/comments/${comment._id}`, {}, config)\r\n      .then((res) => {\r\n        setComments(\r\n          comments.map((comment) =>\r\n            comment._id === res.data._id ? res.data : comment\r\n          )\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const editHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"content\", content);\r\n    if (file) formData.append(\"image\", file);\r\n    axios\r\n      .put(`/posts/${post._id}/comments/${comment._id}`, formData, config)\r\n      .then((res) => {\r\n        setComments(\r\n          comments.map((comment) =>\r\n            comment._id === res.data._id ? res.data : comment\r\n          )\r\n        );\r\n        setEdit(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const onChangeHandler = (target) => {\r\n    // Reset field height\r\n    target.style.height = \"inherit\";\r\n\r\n    // Get the computed styles for the element\r\n    const computed = window.getComputedStyle(target);\r\n\r\n    // Calculate the height\r\n    const height =\r\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\r\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\r\n      target.scrollHeight +\r\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\r\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\r\n\r\n    target.style.height = `${height}px`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (comments && comment) {\r\n      setReplies(\r\n        comments.filter(\r\n          (comm) =>\r\n            /*comm.hasOwnProperty(\"comment\")*/ comm.comment &&\r\n            comm.comment._id === comment._id\r\n        )\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const textarea = document.querySelector(\"textarea\");\r\n    if (textarea) {\r\n      onChangeHandler(textarea);\r\n    }\r\n  }, [showEdit]);\r\n\r\n  return (\r\n    <CommentContainer>\r\n      <Link\r\n        to={\r\n          user._id === comment.user._id\r\n            ? \"/profile\"\r\n            : `/users/${comment.user._id}`\r\n        }\r\n      >\r\n        <UserPhoto className=\"mr-2\" src={comment.user.profile_photo} />\r\n      </Link>\r\n      <CommentWrapper className={\"w-100\"}>\r\n        <CommentBody>\r\n          <h6 className=\"mb-0\">\r\n            {comment.user.display_name ||\r\n              comment.user.first_name + \" \" + comment.user.last_name}\r\n          </h6>\r\n          {!showEdit ? (\r\n            <div style={{ wordBreak: \"break-word\" }}>\r\n              <p\r\n                className=\"mb-0\"\r\n                dangerouslySetInnerHTML={{ __html: comment.content }}\r\n              ></p>\r\n              {comment.image && (\r\n                <Link to=\"/profile\">\r\n                  <img width=\"100%\" src={comment.image.url} />\r\n                </Link>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <Form onSubmit={(e) => editHandler(e)} className=\"w-100\">\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  placeholder=\"Content...\"\r\n                  value={content}\r\n                  onChange={(e) => {\r\n                    setContent(e.target.value);\r\n                    onChangeHandler(e.target);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup style={{ marginLeft: \"12px\" }}>\r\n                <Input\r\n                  onChange={(e) => setFile(e.target.files[0])}\r\n                  type=\"file\"\r\n                  name=\"image\"\r\n                />\r\n                <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\r\n              </FormGroup>\r\n              <FormGroup className=\"text-right mb-1\">\r\n                <Button color=\"primary\" type=\"submit\" size=\"sm\">\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  onClick={() => setEdit(false)}\r\n                  type=\"button\"\r\n                  size=\"sm\"\r\n                  className=\"ml-2\"\r\n                  color=\"danger\"\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          )}\r\n          {!showEdit && (\r\n            <LikesContainer>\r\n              <AiFillLike\r\n                fill={\r\n                  comment.likes.some((e) => e._id === user._id)\r\n                    ? \"royalblue\"\r\n                    : \"\"\r\n                }\r\n                size={12}\r\n              />\r\n              &nbsp;\r\n              <p style={{ fontSize: \"12px\" }} className=\"d-inline-block mb-0\">\r\n                {comment.likes.length}\r\n              </p>\r\n            </LikesContainer>\r\n          )}\r\n        </CommentBody>\r\n        <CommentFooter>\r\n          <FooterLink\r\n            color={\r\n              comment.likes.some((e) => e._id === user._id)\r\n                ? \"royalblue\"\r\n                : \"black\"\r\n            }\r\n            onClick={() => likeComment()}\r\n            bold\r\n          >\r\n            Like\r\n          </FooterLink>\r\n          {level < 3 && (\r\n            <FooterLink bold onClick={() => setShowReply(!showReplyForm)}>\r\n              Reply\r\n            </FooterLink>\r\n          )}\r\n          {user._id === comment.user._id && (\r\n            <FooterLink bold onClick={() => deleteHandler()} color=\"gray\">\r\n              <span style={{ color: \"black\" }}>&middot;&nbsp;&nbsp;</span>\r\n              Delete\r\n            </FooterLink>\r\n          )}\r\n          {user._id === comment.user._id && (\r\n            <FooterLink bold onClick={() => setEdit(!showEdit)} color=\"gray\">\r\n              Edit\r\n            </FooterLink>\r\n          )}\r\n          <FooterLink color=\"lightgray\">\r\n            {moment(comment.createdAt).fromNow()}\r\n          </FooterLink>\r\n        </CommentFooter>\r\n        {replies.length && !showReplies ? (\r\n          <div\r\n            onClick={() => setShowReplies(true)}\r\n            className=\"pl-3 pt-2 d-flex align-items-center\"\r\n          >\r\n            <BsArrow90DegDown\r\n              size={24}\r\n              fill=\"black\"\r\n              style={{ transform: \"rotate(-90deg)\" }}\r\n            />\r\n            &nbsp;\r\n            <ReplyCount className=\"mb-0 font-weight-bold\">\r\n              {replies.length} Replies\r\n            </ReplyCount>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {showReplies &&\r\n          replies.map((reply) => (\r\n            <Reply\r\n              key={reply._id}\r\n              reply={reply}\r\n              user={user}\r\n              setReplies={setReplies}\r\n              replies={replies}\r\n              comment={comment}\r\n              post={post}\r\n            />\r\n          ))}\r\n        {showReplyForm && (\r\n          <ReplyForm\r\n            key={comment._id}\r\n            user={user}\r\n            post={post}\r\n            comment={comment}\r\n            replies={replies}\r\n            setReplies={setReplies}\r\n            setShowReply={setShowReply}\r\n            setComments={setComments}\r\n          />\r\n        )}\r\n      </CommentWrapper>\r\n    </CommentContainer>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ImageForm\\ImageForm.js",["242","243"],"import Axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { GrDiamond } from \"react-icons/gr\";\r\nimport { Container, Form, Input, Button, FormGroup } from \"reactstrap\";\r\nimport { TransparentBackground } from \"./ImageForm.components\";\r\n\r\nconst ImageForm = ({\r\n  method = \"PUT\",\r\n  content,\r\n  path,\r\n  setImageForm,\r\n  reloadUser,\r\n}) => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const config = localStorage.getItem('token') &&  {\r\n    headers: {\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation(); // stop propagating submit the the comment form\r\n    const formData = new FormData();\r\n    if (content) formData.append(\"content\", content);\r\n    formData.append(\"image\", file);\r\n    if (method === \"PUT\") {\r\n      Axios.put(path, formData, config)\r\n        .then((res) => {\r\n          setImageForm(false);\r\n          reloadUser();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      Axios.post(path, formData, config)\r\n      .then((res) => {\r\n        setImageForm(false);\r\n        reloadUser();\r\n\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TransparentBackground className=\"d-flex justify-content-center align-items-center\">\r\n      <Form\r\n        onSubmit={(e) => onSubmitHandler(e)}\r\n        style={{ background: \"white\", borderRadius: \"10px\" }}\r\n        className=\"p-3 w-50 mx-auto\"\r\n        border\r\n      >\r\n        <FormGroup className=\"text-center\">\r\n          <Input\r\n            onChange={(e) => setFile(e.target.files[0])}\r\n            type=\"file\"\r\n            name=\"image\"\r\n          />\r\n        </FormGroup>\r\n        <FormGroup className=\"d-flex justify-content-end\">\r\n          <Button className=\"mr-2\" type=\"submit\" color=\"secondary\">\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type=\"button\"\r\n            color=\"danger\"\r\n            onClick={() => setImageForm(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </FormGroup>\r\n      </Form>\r\n    </TransparentBackground>\r\n  );\r\n};\r\n\r\nexport default ImageForm;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\CommentForm\\CommentForm.js",["244","245"],"import Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { Form, Input, FormGroup, Button } from \"reactstrap\";\r\nimport { UserImage, PhotoImage } from \"./CommentForm.components\";\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst CommentForm = ({ post, user, comments, setComments }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [imageForm, setImageForm] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const [showSubmit, setSubmit] = useState(false);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"content\", content);\r\n    if (file) formData.append(\"image\", file);\r\n    Axios.post(`/posts/${post._id}/comments`, formData, {\r\n      headers: {\r\n        Authorization:\r\n          \"bearer \" + localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setContent(\"\");\r\n        setImageForm(false);\r\n        setFile(null);\r\n        setComments([res.data, ...comments]);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    // Reset field height\r\n    e.target.style.height = \"inherit\";\r\n\r\n    // Calculate the height\r\n    const height = e.target.scrollHeight;\r\n\r\n    e.target.style.height = `${height}px`;\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={(e) => submitHandler(e)}>\r\n      <div className=\"d-flex align-items-center mb-2\">\r\n        <Link to=\"/profile\">\r\n          <UserImage className=\"mr-2\" src={user.profile_photo} />\r\n        </Link>\r\n        <FormGroup className=\"mb-0 w-100 position-relative\">\r\n          <Input\r\n            onFocus={() => setSubmit(true)}\r\n            style={{ borderRadius: \"16px\" }}\r\n            value={content}\r\n            className=\"w-100 py-1 pr-5\"\r\n            placeholder=\"Write a comment..\"\r\n            type=\"textarea\"\r\n            rows={1}\r\n            name=\"content\"\r\n            onChange={(e) => {\r\n              setContent(e.target.value);\r\n              onChangeHandler(e);\r\n            }}\r\n          />\r\n          <PhotoImage\r\n            onClick={() => setImageForm(!imageForm)}\r\n            size={24}\r\n            fill=\"green\"\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n      <CSSTransition\r\n          in={imageForm}\r\n          timeout={300}\r\n          classNames=\"fade\"\r\n          unmountOnExit\r\n        >\r\n          <FormGroup style={{ marginLeft: \"48px\" }}>\r\n            <Input\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n              type=\"file\"\r\n              name=\"image\"\r\n            />\r\n            <em>Max 5MB (Accepted formats: jpg, jpeg, png)</em>\r\n          </FormGroup>\r\n        </CSSTransition>\r\n      {showSubmit && (\r\n        <FormGroup className=\"text-right\">\r\n          <Button type=\"submit\" color=\"primary\" size=\"sm\">\r\n            Comment!\r\n          </Button>\r\n        </FormGroup>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ReplyForm\\ReplyForm.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Notification\\Notification.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendRequest\\FriendRequest.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendsProfile\\FriendsProfile.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Photo\\Photo.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LikesModal\\LikesModal.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendSuggestion\\FriendSuggestion.js",["246","247","248"],"import { Container, Row, Col, Button } from \"reactstrap\";\r\nimport {\r\n  FriendsContainer,\r\n  FriendInfo,\r\n  RoundImage,\r\n} from \"./FriendSuggestion.components\";\r\n\r\nconst FriendSuggestion = ({ onClick, sendRequest, to }) => {\r\n  return (\r\n    <FriendsContainer data-id={to._id} onClick={() => onClick(to._id)}>\r\n      <RoundImage src={to.profile_photo} />\r\n      <FriendInfo>\r\n        <h4>{to.display_name || to.first_name + \" \" + to.last_name}</h4>\r\n        {\r\n          <div>\r\n            <Button\r\n              onClick={() => sendRequest(to._id)}\r\n              color=\"primary\"\r\n              className=\"w-100\"\r\n            >\r\n              Send Friend Request\r\n            </Button>\r\n          </div>\r\n        }\r\n      </FriendInfo>\r\n    </FriendsContainer>\r\n  );\r\n};\r\n\r\nexport default FriendSuggestion;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Reply\\Reply.js",["249","250","251","252"],"import moment from \"moment\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  ReplyContainer,\r\n  UserPhoto,\r\n  ReplyBody,\r\n  ReplyWrapper,\r\n  ReplyFooter,\r\n  FooterLink,\r\n  LikesContainer,\r\n  ReplyCount,\r\n} from \"./Reply.components\";\r\nimport { Form, Input, Button, FormGroup } from \"reactstrap\";\r\nimport { AiFillLike } from \"react-icons/ai\";\r\nimport { BsArrow90DegDown } from \"react-icons/bs\";\r\nimport { ReplyForm } from \"..\";\r\nimport axios from \"axios\";\r\n\r\nconst Reply = ({\r\n  level = 0,\r\n  reply,\r\n  replies,\r\n  setReplies,\r\n  comment,\r\n  user,\r\n  post,\r\n}) => {\r\n  const [content, setContent] = useState(reply.content);\r\n  const [showEdit, setEdit] = useState(false);\r\n\r\n  const config = localStorage.getItem('token') &&  {\r\n    headers: {\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n\r\n\r\n  const deleteHandler = () => {\r\n    window.confirm(\r\n      \"Are you sure you want to delete this comment? This action cannot be undone.\"\r\n    ) &&\r\n      axios\r\n        .delete(`/posts/${post._id}/comments/${reply._id}`, config)\r\n        .then((res) => {\r\n          setReplies(replies.filter((reply) => reply._id !== res.data._id));\r\n        })\r\n        .catch((err) => console.log(err));\r\n  };\r\n\r\n  const likeComment = () => {\r\n    axios\r\n      .post(`/posts/${post._id}/comments/${reply._id}`, {}, config)\r\n      .then((res) => {\r\n        setReplies(\r\n          replies.map((reply) =>\r\n            reply._id === res.data._id ? res.data : reply\r\n          )\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const editHandler = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .put(`/posts/${post._id}/comments/${reply._id}`, { content }, config)\r\n      .then((res) => {\r\n        setReplies(\r\n          replies.map((reply) =>\r\n            reply._id === res.data._id ? res.data : reply\r\n          )\r\n        );\r\n        setEdit(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const onChangeHandler = (target) => {\r\n    // Reset field height\r\n    target.style.height = \"inherit\";\r\n\r\n    // Get the computed styles for the element\r\n    const computed = window.getComputedStyle(target);\r\n\r\n    // Calculate the height\r\n    const height =\r\n      parseInt(computed.getPropertyValue(\"border-top-width\"), 10) +\r\n      parseInt(computed.getPropertyValue(\"padding-top\"), 10) +\r\n      target.scrollHeight +\r\n      parseInt(computed.getPropertyValue(\"padding-bottom\"), 10) +\r\n      parseInt(computed.getPropertyValue(\"border-bottom-width\"), 10);\r\n\r\n    target.style.height = `${height}px`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const textarea = document.querySelector(\"textarea\");\r\n    if (textarea) {\r\n      onChangeHandler(textarea);\r\n    }\r\n  }, [showEdit]);\r\n\r\n  return (\r\n    <ReplyContainer>\r\n      <UserPhoto className=\"mr-2\" src={reply.user.profile_photo} />\r\n      <ReplyWrapper className={\"w-100\"}>\r\n        <ReplyBody>\r\n          <h6 className=\"mb-0\">\r\n            {reply.user.display_name ||\r\n              reply.user.first_name + \" \" + reply.user.last_name}\r\n          </h6>\r\n          {!showEdit ? (\r\n            <div style={{wordBreak: 'break-word'}}>\r\n              <p\r\n                className=\"mb-0\"\r\n                dangerouslySetInnerHTML={{ __html: reply.content }}\r\n              ></p>\r\n              {reply.image && <img  width=\"100%\" src={reply.image.url} />}\r\n            </div>\r\n          ) : (\r\n            <Form onSubmit={(e) => editHandler(e)} className=\"w-100\">\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"textarea\"\r\n                  value={content}\r\n                  onChange={(e) => {\r\n                    setContent(e.target.value);\r\n                    onChangeHandler(e.target);\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup className=\"text-right mb-1\">\r\n                <Button color=\"primary\" type=\"submit\" size=\"sm\">\r\n                  Edit\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          )}\r\n          {!showEdit && (\r\n            <LikesContainer>\r\n              <AiFillLike\r\n                fill={\r\n                  reply.likes.some((e) => e._id === user._id) ? \"royalblue\" : \"\"\r\n                }\r\n                size={12}\r\n              />\r\n              &nbsp;\r\n              <p style={{ fontSize: \"12px\" }} className=\"d-inline-block mb-0\">\r\n                {reply.likes.length}\r\n              </p>\r\n            </LikesContainer>\r\n          )}\r\n        </ReplyBody>\r\n        <ReplyFooter>\r\n          <FooterLink\r\n            color={\r\n              reply.likes.some((e) => e._id === user._id)\r\n                ? \"royalblue\"\r\n                : \"black\"\r\n            }\r\n            onClick={() => likeComment()}\r\n            bold\r\n          >\r\n            Like\r\n          </FooterLink>\r\n          {user._id === reply.user._id && (\r\n            <FooterLink bold onClick={() => deleteHandler()} color=\"gray\">\r\n              <span style={{ color: \"black\" }}>&middot;&nbsp;&nbsp;</span>\r\n              Delete\r\n            </FooterLink>\r\n          )}\r\n          {user._id === reply.user._id && (\r\n            <FooterLink bold onClick={() => setEdit(!showEdit)} color=\"gray\">\r\n              Edit\r\n            </FooterLink>\r\n          )}\r\n          <FooterLink color=\"lightgray\">\r\n            {moment(reply.createdAt).fromNow()}\r\n          </FooterLink>\r\n        </ReplyFooter>\r\n      </ReplyWrapper>\r\n    </ReplyContainer>\r\n  );\r\n};\r\n\r\nexport default Reply;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\UserList\\UserList.js",["253"],"const UserList = ({ users }) => {\r\n  return (\r\n    <div className=\"p-2\" style={{ borderRadius: \"5px\" }}>\r\n      {users.map((user) => {\r\n        <p className=\"mb-1\">\r\n          {user.display_name || user.first_name + \" \" + user.last_name}\r\n        </p>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Comment\\Comment.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Post\\Post.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Navbar\\Navbar.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\PostForm\\PostForm.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ImageForm\\ImageForm.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LoadingOverlay\\LoadingOverlay.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendRequest\\FriendRequest.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\ReplyForm\\ReplyForm.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Notification\\Notification.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\CommentForm\\CommentForm.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendsProfile\\FriendsProfile.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Photo\\Photo.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\LikesModal\\LikesModal.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\FriendSuggestion\\FriendSuggestion.components.js",[],"C:\\Users\\gabi\\Desktop\\facebook_mern\\client\\src\\Components\\Reply\\Reply.components.js",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":137,"column":6,"nodeType":"260","endLine":137,"endColumn":16,"suggestions":"261"},{"ruleId":"258","severity":1,"message":"262","line":164,"column":6,"nodeType":"260","endLine":164,"endColumn":19,"suggestions":"263"},{"ruleId":"258","severity":1,"message":"264","line":170,"column":6,"nodeType":"260","endLine":170,"endColumn":25,"suggestions":"265"},{"ruleId":"258","severity":1,"message":"266","line":43,"column":6,"nodeType":"260","endLine":43,"endColumn":12,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":3,"column":31,"nodeType":"270","messageId":"271","endLine":3,"endColumn":37},{"ruleId":"268","severity":1,"message":"272","line":19,"column":10,"nodeType":"270","messageId":"271","endLine":19,"endColumn":22},{"ruleId":"258","severity":1,"message":"273","line":73,"column":6,"nodeType":"260","endLine":73,"endColumn":8,"suggestions":"274"},{"ruleId":"258","severity":1,"message":"275","line":82,"column":6,"nodeType":"260","endLine":82,"endColumn":19,"suggestions":"276"},{"ruleId":"258","severity":1,"message":"277","line":92,"column":6,"nodeType":"260","endLine":92,"endColumn":16,"suggestions":"278"},{"ruleId":"258","severity":1,"message":"279","line":29,"column":6,"nodeType":"260","endLine":29,"endColumn":8,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":2,"column":25,"nodeType":"283","messageId":"284","endLine":2,"endColumn":27},{"ruleId":"268","severity":1,"message":"285","line":3,"column":16,"nodeType":"270","messageId":"271","endLine":3,"endColumn":21},{"ruleId":"258","severity":1,"message":"286","line":78,"column":6,"nodeType":"260","endLine":78,"endColumn":8,"suggestions":"287"},{"ruleId":"258","severity":1,"message":"288","line":120,"column":6,"nodeType":"260","endLine":120,"endColumn":8,"suggestions":"289"},{"ruleId":"290","severity":1,"message":"291","line":193,"column":13,"nodeType":"292","endLine":193,"endColumn":71},{"ruleId":"258","severity":1,"message":"273","line":113,"column":6,"nodeType":"260","endLine":113,"endColumn":8,"suggestions":"293"},{"ruleId":"258","severity":1,"message":"273","line":120,"column":6,"nodeType":"260","endLine":120,"endColumn":12,"suggestions":"294"},{"ruleId":"258","severity":1,"message":"295","line":109,"column":6,"nodeType":"260","endLine":109,"endColumn":8,"suggestions":"296"},{"ruleId":"290","severity":1,"message":"291","line":143,"column":19,"nodeType":"292","endLine":143,"endColumn":63},{"ruleId":"268","severity":1,"message":"297","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":19},{"ruleId":"268","severity":1,"message":"298","line":4,"column":10,"nodeType":"270","messageId":"271","endLine":4,"endColumn":19},{"ruleId":"268","severity":1,"message":"299","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":19},{"ruleId":"268","severity":1,"message":"300","line":3,"column":31,"nodeType":"270","messageId":"271","endLine":3,"endColumn":37},{"ruleId":"268","severity":1,"message":"298","line":1,"column":10,"nodeType":"270","messageId":"271","endLine":1,"endColumn":19},{"ruleId":"268","severity":1,"message":"301","line":1,"column":21,"nodeType":"270","messageId":"271","endLine":1,"endColumn":24},{"ruleId":"268","severity":1,"message":"302","line":1,"column":26,"nodeType":"270","messageId":"271","endLine":1,"endColumn":29},{"ruleId":"268","severity":1,"message":"303","line":11,"column":3,"nodeType":"270","messageId":"271","endLine":11,"endColumn":13},{"ruleId":"268","severity":1,"message":"304","line":15,"column":10,"nodeType":"270","messageId":"271","endLine":15,"endColumn":26},{"ruleId":"268","severity":1,"message":"305","line":16,"column":10,"nodeType":"270","messageId":"271","endLine":16,"endColumn":19},{"ruleId":"290","severity":1,"message":"291","line":118,"column":31,"nodeType":"292","endLine":118,"endColumn":74},{"ruleId":"306","severity":1,"message":"307","line":4,"column":25,"nodeType":"308","messageId":"309","endLine":4,"endColumn":27},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser._id' and 'user._id'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSentRequest' needs the current value of 'currentUser._id'.","ArrayExpression",["312"],"React Hook useEffect has missing dependencies: 'config' and 'user_id'. Either include them or remove the dependency array.",["313"],"React Hook useEffect has a missing dependency: 'checkIsFriend'. Either include it or remove the dependency array.",["314"],"React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.",["315"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'sentRequests' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.",["316"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPreviewUserPosts' needs the current value of 'posts'.",["317"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array. If 'setSentRequests' needs the current value of 'user._id', you can also switch to useReducer instead of useState and read 'user._id' in the reducer.",["318"],"React Hook useEffect has a missing dependency: 'post_id'. Either include it or remove the dependency array.",["319"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'user.display_name' and 'user.first_name'. Either include them or remove the dependency array. If 'setDisplayName' needs the current value of 'user.first_name', you can also switch to useReducer instead of useState and read 'user.first_name' in the reducer.",["320"],"React Hook useEffect has a missing dependency: 'post._id'. Either include it or remove the dependency array.",["321"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["322"],["323"],"React Hook useEffect has missing dependencies: 'comment' and 'comments'. Either include them or remove the dependency array. If 'setReplies' needs the current value of 'comments', you can also switch to useReducer instead of useState and read 'comments' in the reducer.",["324"],"'GrDiamond' is defined but never used.","'Container' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ReplyCount' is defined but never used.","'BsArrow90DegDown' is defined but never used.","'ReplyForm' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"333","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},"Update the dependencies array to be: [currentUser._id, requests, user._id]",{"range":"350","text":"351"},"Update the dependencies array to be: [config, currentUser, user_id]",{"range":"352","text":"353"},"Update the dependencies array to be: [checkIsFriend, currentUser, user]",{"range":"354","text":"355"},"Update the dependencies array to be: [location, user]",{"range":"356","text":"357"},"Update the dependencies array to be: [config]",{"range":"358","text":"359"},"Update the dependencies array to be: [posts, previewUser]",{"range":"360","text":"361"},"Update the dependencies array to be: [requests, user._id]",{"range":"362","text":"363"},"Update the dependencies array to be: [post_id]",{"range":"364","text":"365"},"Update the dependencies array to be: [user.display_name, user.first_name]",{"range":"366","text":"367"},"Update the dependencies array to be: [post._id]",{"range":"368","text":"369"},{"range":"370","text":"359"},"Update the dependencies array to be: [config, user]",{"range":"371","text":"372"},"Update the dependencies array to be: [comment, comments]",{"range":"373","text":"374"},[4073,4083],"[currentUser._id, requests, user._id]",[4798,4811],"[config, currentUser, user_id]",[4963,4982],"[checkIsFriend, currentUser, user]",[1357,1363],"[location, user]",[2406,2408],"[config]",[2643,2656],"[posts, previewUser]",[2960,2970],"[requests, user._id]",[790,792],"[post_id]",[2127,2129],"[user.display_name, user.first_name]",[3377,3379],"[post._id]",[3149,3151],[3365,3371],"[config, user]",[3285,3287],"[comment, comments]"]